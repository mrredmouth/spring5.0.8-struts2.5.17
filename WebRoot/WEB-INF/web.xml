<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/j2ee" xmlns:web="http://xmlns.jcp.org/xml/ns/javaee" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd" id="WebApp_9" version="2.4">

	<context-param>
	  <param-name>contextConfigLocation</param-name>
	  <param-value>classpath:spring/applicationContext*.xml</param-value>
	</context-param>

	<!-- 方式一：自己配置IOC:配置IOC容器的监听器，进行初始化IOC，并放到上下文对象的属性中。 -->
	<!-- <listener>
		<listener-class>com.ccg.springstruts2.listener.SpringServletContextListener</listener-class>
	</listener> -->
  
  	<!-- 方式二：spring提供的监听器，比我们的更严谨,
  		将IOC容器放在这个属性里：WebApplicationContext.ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE,
  		从ApplicationContext域对象取属性：-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<!-- 配置struts2的filter -->
	<filter>
	  <filter-name>struts2</filter-name>
	  <filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>
	</filter>
	<filter-mapping>
	  <filter-name>struts2</filter-name>
	  <url-pattern>/*</url-pattern>
	</filter-mapping>
  
</web-app>